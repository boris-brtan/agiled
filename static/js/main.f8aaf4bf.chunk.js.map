{"version":3,"sources":["actions/settings.js","actions/vote.js","components/VoteCards.js","components/Menu.js","components/CountDown.js","components/Settings.js","components/VoteResults.js","App.js","serviceWorker.js","reducers/settings.js","reducers/vote.js","reducers/index.js","index.js","sounds/alarm.mp3","sounds/tick.mp3"],"names":["SET_COUNTDOWN","setCountdown","seconds","type","payload","SET_COUNTDOWN_WARNING","setCountdownWarning","SET_SCALE","SCALE_ITEMS","setScale","scale","TOGGLE_SETTINGS","toggleSettings","open","TOGGLE_SOUND","toggleSound","sound","TOGGLE_THEME","toggleTheme","theme","TOGGLE_ONLINE","toggleOnline","online","SET_ONLINE_URL","TOGGLE_CLOSE_ON_VOTE","toggleCloseOnVote","closeOnVote","SET_VOTE","setVote","vote","useStyles","makeStyles","createStyles","root","display","flexWrap","padding","voteCard","content","paddingTop","flex","margin","fontSize","height","width","selected","borderColor","palette","warning","main","color","VoteCards","props","classes","dispatch","useDispatch","history","useHistory","useSelector","state","settings","handleDrawerToggle","className","map","text","idx","Button","key","variant","onClick","location","pathname","handleToggleVote","clsx","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","maxWidth","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","drawerHeaderActions","flexGrow","contentShift","PersistentDrawerLeft","togglePalleteMode","children","useTheme","React","useState","setOpen","onTouchStart","e","nativeEvent","startX","touches","clientX","target","addEventListener","handleSwipe","evt","swipeLength","changedTouches","removeEventListener","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","direction","Divider","List","icon","path","title","item","ListItem","button","push","ListItemIcon","ListItemText","primary","alarm","Audio","alarmSound","tick","tickSound","load","flexDirection","userSelect","complex","backgroundColor","left","transform","top","background","default","error","textTransform","minWidth","secondary","contrastText","backgroundImage","action","hover","CountDown","initialCounter","countdown","countdownWarning","counterInterval","useRef","counter","setCounter","warningMode","useMemo","errorMode","counterFormat","minutes","Math","abs","substr","useEffect","clearInterval","current","light","setInterval","cnt","play","number","marginTop","marginBottom","Settings","Dialog","onClose","fullWidth","DialogTitle","DialogContent","dividers","FormControl","component","RadioGroup","name","value","onChange","FormControlLabel","control","Radio","label","FormGroup","row","Switch","checked","TextField","required","inputProps","min","onInput","val","disabled","perspective","card","borderWidth","breakpoints","up","VoteResults","visible","setVisible","App","themeType","responsiveFontSizes","createMuiTheme","ThemeProvider","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","initialState","onlineURL","settingsReducer","combineReducers","process","search","createBrowserHistory","createHashHistory","store","createStore","rootReducer","applyMiddleware","routerMiddleware","getState","JSON","parse","localStorage","ReactDOM","render","document","getElementById","onbeforeunload","stringify","URL","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.f8aaf4bf.chunk.js","sourcesContent":["import React from 'react'\nimport BreakIcon from '@material-ui/icons/LocalBarRounded'\n\nexport const SET_COUNTDOWN = 'SET_COUNTDOWN'\nexport const setCountdown = (seconds = 7) => ({ type: SET_COUNTDOWN, payload: seconds })\n\nexport const SET_COUNTDOWN_WARNING = 'SET_COUNTDOWN_WARNING'\nexport const setCountdownWarning = (seconds = 4) => ({ type: SET_COUNTDOWN_WARNING, payload: seconds })\n\nexport const SET_SCALE = 'SET_SCALE'\nexport const SCALES = ['Standard', 'Fibonacci', 'T-shirts']\nexport const SCALE_ITEMS = [\n    [0, 1, 2, 3, 5, 8, 13, 20, 40, 100, '?', <BreakIcon />],\n    [0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, '?', <BreakIcon />],\n    ['XS', 'S', 'M', 'L', 'XL', 'XXL', '?', <BreakIcon />],\n]\nexport const setScale = (scale = 0) => ({ type: SET_SCALE, payload: scale })\n\nexport const TOGGLE_SETTINGS = 'TOGGLE_SETTINGS'\nexport const toggleSettings = (open) => ({ type: TOGGLE_SETTINGS, payload: open })\n\nexport const TOGGLE_SOUND = 'TOGGLE_SOUND'\nexport const toggleSound = (sound) => ({ type: TOGGLE_SOUND, payload: sound })\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME'\nexport const toggleTheme = (theme) => ({ type: TOGGLE_THEME, payload: theme })\n\nexport const TOGGLE_ONLINE = 'TOGGLE_ONLINE'\nexport const toggleOnline = (online) => ({ type: TOGGLE_ONLINE, payload: online })\n\nexport const SET_ONLINE_URL = 'SET_ONLINE_URL'\nexport const setOnlineURL = (onlineURL) => ({ type: SET_ONLINE_URL, payload: onlineURL })\n\nexport const TOGGLE_CLOSE_ON_VOTE = 'TOGGLE_CLOSE_ON_VOTE'\nexport const toggleCloseOnVote = (closeOnVote) => ({ type: TOGGLE_CLOSE_ON_VOTE, payload: closeOnVote })\n","export const SET_VOTE = 'SET_VOTE'\nexport const setVote = (vote) => ({ type: SET_VOTE, payload: vote })\n","import React from 'react'\nimport clsx from 'clsx'\nimport { createStyles, makeStyles } from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { SCALE_ITEMS, setVote } from '../actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            padding: '10px 5px',\n        },\n        voteCard: {\n            '&::before': {\n                display: 'block',\n                content: '\"\"',\n                paddingTop: '115%',\n            },\n            flex: 1,\n            margin: 5,\n            padding: 0,\n            fontSize: 24,\n            '& svg': {\n                height: '80%',\n                width: '80%',\n            },\n        },\n        selected: {\n            borderColor: theme.palette.warning.main,\n            color: theme.palette.warning.main,\n        },\n    })\n)\n\nfunction VoteCards(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const scale = useSelector((state) => state.settings.scale)\n    const closeOnVote = useSelector((state) => state.settings.closeOnVote)\n    const vote = useSelector((state) => state.vote.selected)\n\n    const { handleDrawerToggle = () => { } } = props\n\n    const handleToggleVote = (idx) => {\n        if (closeOnVote && history.location.pathname === '/results') {\n            handleDrawerToggle()\n        }\n        dispatch(setVote(idx === vote ? null : idx))\n    }\n\n    return <div className={classes.root}>\n        {SCALE_ITEMS[scale].map((text, idx) => (\n            <Button key={text} variant=\"outlined\" onClick={() => handleToggleVote(idx)}\n                className={clsx(classes.voteCard, {\n                    [classes.selected]: vote === idx,\n                })}\n            >\n                {text}\n            </Button>\n        ))}\n    </div>\n}\n\nexport default VoteCards\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme, createStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport PlayArrow from '@material-ui/icons/PlayArrowRounded'\nimport Pause from '@material-ui/icons/PauseRounded'\nimport DarkThemeIcon from '@material-ui/icons/Brightness4'\nimport LightThemeIcon from '@material-ui/icons/Brightness7'\nimport SettingsIcon from '@material-ui/icons/TuneRounded'\nimport VoteCards from './VoteCards'\nimport { useDispatch } from 'react-redux'\nimport { toggleSettings } from '../actions'\nimport { useHistory } from 'react-router-dom'\n\nconst drawerWidth = 320\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flex: 1,\n        },\n        appBar: {\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: '100%',\n            maxWidth: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: '100%',\n            maxWidth: drawerWidth,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n        drawerHeaderActions: {\n            flex: 1,\n        },\n        content: {\n            flexGrow: 1,\n            display: 'flex',\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            marginLeft: -drawerWidth,\n        },\n        contentShift: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        },\n    }),\n)\n\nexport default function PersistentDrawerLeft({ togglePalleteMode, children }) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const theme = useTheme()\n    const [open, setOpen] = React.useState(true)\n\n    const handleDrawerToggle = () => {\n        setOpen(!open)\n    }\n\n    const handleSettingsToggle = (e) => {\n        dispatch(toggleSettings(true))\n    }\n\n    const handleTouchStart = ({ nativeEvent: e }) => {\n        const startX = e.touches[0].clientX\n\n        const handleSwipe = (evt) => {\n            const swipeLength = evt.changedTouches[0].clientX - startX\n            if (!open && swipeLength > 150) {\n                setOpen(true)\n            } else if (open && swipeLength < -150) {\n                setOpen(false)\n            }\n            e.target.removeEventListener('touchend', handleSwipe)\n        }\n        if ((!open && startX < 50) || (open && startX < 300)) {\n            e.target.addEventListener('touchend', handleSwipe)\n        }\n    }\n\n    return (\n        <div className={classes.root} onTouchStart={handleTouchStart}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerToggle}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Agiled\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <div className={classes.drawerHeaderActions}>\n                        <IconButton onClick={togglePalleteMode}>\n                            {theme.palette.type === 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\n                        </IconButton>\n                        <IconButton onClick={handleSettingsToggle}>\n                            <SettingsIcon />\n                        </IconButton>\n                    </div>\n                    <IconButton onClick={handleDrawerToggle}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {[{\n                        icon: <PlayArrow />,\n                        path: '/results',\n                        title: 'Start vote',\n                    }].map((item) => (\n                        history.location.pathname) !== '/results' ?\n                        <ListItem button key={item.title} onClick={() => history.push(item.path)}>\n                            <ListItemIcon><PlayArrow /></ListItemIcon>\n                            <ListItemText primary={'Start vote'} />\n                        </ListItem>\n                        :\n                        <ListItem button key=\"Stop vote\" onClick={() => history.push('/')}>\n                            <ListItemIcon><Pause /></ListItemIcon>\n                            <ListItemText primary={'Stop vote'} />\n                        </ListItem>\n                    )}\n                </List>\n                <Divider />\n                <VoteCards handleDrawerToggle={handleDrawerToggle} />\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                {children}\n            </main>\n        </div>\n    )\n}\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\nimport { Typography, Button, createStyles, makeStyles, useTheme } from '@material-ui/core'\nimport clsx from 'clsx'\nimport alarmSound from '../sounds/alarm.mp3'\nimport tickSound from '../sounds/tick.mp3'\nimport { useSelector } from 'react-redux'\n\nconst alarm = new Audio(alarmSound)\nconst tick = new Audio(tickSound)\nalarm.load()\ntick.load()\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        'countdown': {\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            userSelect: 'none',\n            transition: theme.transitions.create(['background-color'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.complex,\n            }),\n        },\n        'counter': {\n            fontSize: '20vw',\n            position: 'relative',\n            '&:after': {\n                backgroundColor: 'transparent',\n                content: '\"\"',\n                display: 'block',\n                width: '104%',\n                left: '-2%',\n                height: '2vw',\n                transform: 'rotate(-10deg)',\n                position: 'absolute',\n                top: '50%',\n                '.error&': {\n                    backgroundColor: theme.palette.background.default,\n                    '$light &': {\n                        backgroundColor: theme.palette.error.main,\n                    },\n                },\n            },\n        },\n        'button': {\n            fontSize: 30,\n            textTransform: 'none',\n            padding: '7px 25px',\n            minWidth: 150,\n            backgroundColor: theme.palette.secondary.main,\n            color: theme.palette.secondary.contrastText,\n            transition: theme.transitions.create(['background'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.complex,\n            }),\n            '&:hover': {\n                backgroundImage: `linear-gradient(to right, ${theme.palette.action.hover}, ${theme.palette.action.hover})`,\n                backgroundColor: theme.palette.secondary.main,\n                '$warning&': {\n                    backgroundColor: theme.palette.warning.main,\n                },\n                '$error&': {\n                    backgroundColor: theme.palette.error.main,\n                },\n            },\n        },\n        'light': {\n            backgroundColor: theme.palette.secondary.main,\n            color: theme.palette.secondary.contrastText,\n        },\n        'warning': {\n            backgroundColor: theme.palette.warning.main,\n            color: theme.palette.error.contrastText,\n        },\n        'error': {\n            backgroundColor: theme.palette.error.main,\n            color: theme.palette.error.contrastText,\n        },\n    })\n)\n\nfunction CountDown() {\n    const classes = useStyles()\n    const theme = useTheme()\n    const initialCounter = useSelector(({ settings }) => settings.countdown)\n    const countdownWarning = useSelector(({ settings }) => settings.countdownWarning)\n    const sound = useSelector(({ settings }) => settings.sound)\n\n    const counterInterval = useRef(0)\n    const [counter, setCounter] = useState(initialCounter)\n\n    const warningMode = useMemo(() => counter <= countdownWarning && counter > 0, [counter, countdownWarning])\n    const errorMode = useMemo(() => counter < 1, [counter])\n    const counterFormat = useMemo(() => {\n        const minutes = (Math.abs(counter) < 600 ? '0' : '') + Math.abs(counter / 60 | 0)\n        const seconds = ('0' + Math.abs(counter % 60)).substr(-2)\n\n        return `${minutes}:${seconds}`\n    }, [counter])\n\n    useEffect(() => {\n        return () => {\n            clearInterval(counterInterval.current)\n            counterInterval.current = 0\n        }\n    }, [])\n\n    useEffect(() => {\n        if (counterInterval.current === 0) setCounter(initialCounter)\n    }, [initialCounter])\n\n    const handleCountDown = () => {\n        if (initialCounter > counter) {\n            clearInterval(counterInterval.current)\n            counterInterval.current = 0\n            setCounter(initialCounter)\n        } else {\n            setCounter(counter - 1)\n            counterInterval.current = setInterval(() =>\n                setCounter(cnt => {\n                    if (sound) {\n                        if (cnt <= countdownWarning + 1 && cnt > 1) tick.play()\n                        else if (cnt === 1) alarm.play()\n                    }\n                    return cnt - 1\n                }),\n                1000\n            )\n        }\n    }\n\n    return <div className={clsx(classes.countdown, {\n        [classes.light]: theme.palette.type === 'light',\n        [classes.warning]: theme.palette.type === 'light' && warningMode,\n        [classes.error]: theme.palette.type === 'light' && errorMode,\n    })}>\n        <Typography className={clsx(classes.counter, {\n            error: errorMode,\n        })}>\n            <span>{counterFormat}</span>\n        </Typography>\n        <Button\n            onClick={handleCountDown}\n            variant=\"contained\"\n            className={clsx(classes.button, {\n                [classes.warning]: warningMode,\n                [classes.error]: errorMode,\n            })}\n        >\n            {counterInterval.current === 0 ? 'Start' : 'Reset'}\n        </Button>\n    </div>\n}\n\nexport default CountDown\n","import React from 'react'\nimport { Dialog, DialogContent, DialogTitle, FormControl, RadioGroup, FormControlLabel, Radio, Switch, FormGroup, TextField, makeStyles, createStyles } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setScale, toggleSettings, toggleSound, setCountdown, setCountdownWarning, toggleOnline, toggleCloseOnVote } from '../actions/settings'\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        number: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(1),\n            display: 'block',\n        }\n    })\n)\n\nfunction Settings() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const scale = useSelector((state) => state.settings.scale)\n    const sound = useSelector((state) => state.settings.sound)\n    const open = useSelector((state) => state.settings.open)\n    const countdown = useSelector((state) => state.settings.countdown)\n    const countdownWarning = useSelector((state) => state.settings.countdownWarning)\n    const online = useSelector((state) => state.settings.online)\n    const closeOnVote = useSelector((state) => state.settings.closeOnVote)\n\n    const handleClose = () => {\n        dispatch(toggleSettings(false))\n    }\n\n    const handleChangeScale = (e) => {\n        dispatch(setScale(e.target.value | 0))\n    }\n\n    const handleToggleSound = () => {\n        dispatch(toggleSound(!sound))\n    }\n\n    const handleChangeCountdown = (e) => {\n        dispatch(setCountdown(e.target.value | 0))\n    }\n\n    const handleChangeCountdownWarning = (e) => {\n        const val = countdown < e.target.value | 0 ? countdown : e.target.value | 0\n        dispatch(setCountdownWarning(val))\n    }\n\n    const handleToggleOnline = () => {\n        dispatch(toggleOnline(!online))\n    }\n\n    const handleToggleCloseOnVote = () => {\n        dispatch(toggleCloseOnVote(!closeOnVote))\n    }\n\n    return <Dialog onClose={handleClose} open={open} fullWidth>\n        <DialogTitle>\n            Settings\n        </DialogTitle>\n        <DialogContent dividers>\n            <FormControl component=\"fieldset\">\n                <RadioGroup name=\"scale\" value={scale} onChange={handleChangeScale}>\n                    {['Standard', 'Fibonacci', 'T-shirts'].map((item, idx) => {\n                        return <FormControlLabel\n                            control={<Radio />}\n                            key={item}\n                            label={item}\n                            value={idx}\n                        />\n                    })}\n                </RadioGroup>\n            </FormControl>\n            <FormGroup row>\n                <FormControlLabel\n                    control={<Switch checked={closeOnVote} onChange={handleToggleCloseOnVote} />}\n                    label=\"Close menu after vote\"\n                />\n            </FormGroup>\n            <FormGroup row>\n                <FormControlLabel\n                    control={<Switch checked={sound} onChange={handleToggleSound} />}\n                    label=\"Sound\"\n                />\n            </FormGroup>\n            <TextField\n                className={classes.number}\n                required\n                label=\"Countdown limit (s)\"\n                type=\"number\"\n                inputProps={{\n                    min: 0,\n                }}\n                value={countdown}\n                onInput={handleChangeCountdown}\n            />\n            <TextField\n                className={classes.number}\n                required\n                label=\"Countdown warning limit (s)\"\n                type=\"number\"\n                inputProps={{\n                    min: 0,\n                }}\n                error={countdown < countdownWarning}\n                value={countdownWarning}\n                onInput={handleChangeCountdownWarning}\n            />\n            <FormGroup row>\n                <FormControlLabel\n                    control={<Switch checked={online} onChange={handleToggleOnline} />}\n                    label=\"Offline (Singleplayer)\"\n                    disabled\n                />\n            </FormGroup>\n        </DialogContent>\n    </Dialog>\n}\n\nexport default Settings\n","import React, { useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles, Button } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { SCALE_ITEMS } from '../actions/settings'\n\nconst useStyles = makeStyles((theme) => createStyles({\n        root: {\n            flex: 1,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            perspective: '100vw',\n        },\n        card: {\n            minWidth: '3.6ex',\n            backgroundColor: theme.palette.background.default,\n            borderWidth: 2,\n            fontSize: '45vw',\n            [theme.breakpoints.up('sm')]: {\n                fontSize: '30vw',\n            },\n            [theme.breakpoints.up('md')]: {\n                fontSize: '20vw',\n            },\n            [theme.breakpoints.up('lg')]: {\n                fontSize: '15vw',\n            },\n            padding: 0,\n            transformStyle: 'preserve-3d',\n            transform: 'rotateY(.5turn)',\n            transition: 'transform 1s',\n            '& span.MuiButton-label svg': {\n                width: '80%',\n                height: '80%',\n            },\n            '&:hover': {\n                backgroundColor: theme.palette.background.default,\n            },\n            '&:before': {\n                content: '\"\"',\n                display: 'table',\n                paddingTop: '120%',\n            },\n            '&:after': {\n                content: '\"\"',\n                display: 'block',\n                position: 'absolute',\n                width: '99%',\n                height: '99%',\n                transform: 'rotateY(.5turn)',\n                backgroundColor: theme.palette.background.default,\n                backgroundImage: `\n                    repeating-linear-gradient(-45deg, transparent, transparent 5px, ${theme.palette.action.selected} 6px, transparent 7px),\n                    repeating-linear-gradient(45deg, transparent, transparent 5px,  ${theme.palette.action.selected} 6px, transparent 7px)\n                `,\n            }\n        },\n        'visible': {\n            transform: 'rotateY(0turn)',\n        }\n    })\n)\n\nfunction VoteResults() {\n    const classes = useStyles()\n    const [visible, setVisible] = useState(false)\n\n    const scale = useSelector(({settings}) => settings.scale)\n    const vote = useSelector(({ vote }) => vote.selected)\n\n    const handleToggleVisible = () => setVisible(!visible)\n\n    useEffect(() => {\n        setVisible(false)\n    }, [vote])\n\n    return <div className={classes.root}>\n        { vote !== null ? <Button\n        onClick={handleToggleVisible}\n        className={clsx(classes.card, {\n            [classes.visible]: visible,\n        })} variant=\"outlined\">{SCALE_ITEMS[scale][vote]}</Button> : null}\n    </div>\n}\n\nexport default VoteResults\n","import React from 'react'\nimport Menu from './components/Menu'\nimport { responsiveFontSizes, createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport CountDown from './components/CountDown'\nimport Settings from './components/Settings'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toggleTheme } from './actions'\nimport { Route } from 'react-router-dom'\nimport VoteResults from './components/VoteResults'\n\nfunction App() {\n    const dispatch = useDispatch()\n    const themeType = useSelector(({settings}) => settings.theme)\n    const theme = responsiveFontSizes(\n        createMuiTheme({\n            palette: {\n                type: ['dark', 'light'][themeType],\n                primary: {\n                    main: '#448aff',\n                },\n                secondary: {\n                    main: '#00897b',\n                },\n            },\n        })\n    )\n\n    const togglePalleteMode = () => {\n        dispatch(toggleTheme((themeType + 1) % 2))\n    }\n\n    return <ThemeProvider theme={theme}>\n        <Menu togglePalleteMode={togglePalleteMode}>\n            <Settings />\n            <Route path=\"/\" exact component={CountDown} />\n            <Route path=\"/results\" component={VoteResults} />\n        </Menu>\n    </ThemeProvider>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    SET_COUNTDOWN, SET_SCALE,\n    TOGGLE_SETTINGS, TOGGLE_SOUND, TOGGLE_THEME, SET_COUNTDOWN_WARNING, TOGGLE_ONLINE, SET_ONLINE_URL, TOGGLE_CLOSE_ON_VOTE\n} from '../actions/settings.js'\n\nconst initialState = {\n    scale: 0,\n    open: false,\n    sound: true,\n    theme: 0,\n    countdown: 7,\n    countdownWarning: 3,\n    online: false,\n    onlineURL: false,\n    closeOnVote: false,\n}\n\nfunction settingsReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_COUNTDOWN:\n            return {\n                ...state,\n                countdown: action.payload,\n            }\n        case SET_COUNTDOWN_WARNING:\n            return {\n                ...state,\n                countdownWarning: action.payload,\n            }\n        case SET_SCALE:\n            return {\n                ...state,\n                scale: action.payload,\n            }\n        case TOGGLE_SETTINGS:\n            return {\n                ...state,\n                open: action.payload,\n            }\n        case TOGGLE_SOUND:\n            return {\n                ...state,\n                sound: action.payload,\n            }\n        case TOGGLE_THEME:\n            return {\n                ...state,\n                theme: action.payload,\n            }\n        case TOGGLE_ONLINE:\n            return {\n                ...state,\n                online: action.payload,\n            }\n        case SET_ONLINE_URL:\n            return {\n                ...state,\n                onlineURL: action.payload,\n            }\n        case TOGGLE_CLOSE_ON_VOTE:\n            return {\n                ...state,\n                closeOnVote: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport default settingsReducer\n","import {\n    SET_VOTE\n} from '../actions/vote.js'\n\nconst initialState = {\n    selected: null,\n}\n\nfunction settingsReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_VOTE:\n            return {\n                ...state,\n                selected: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport default settingsReducer\n","import { combineReducers } from 'redux'\n\nimport settings from './settings'\nimport vote from './vote'\n\nexport default combineReducers({\n    settings,\n    vote,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createBrowserHistory, createHashHistory } from 'history'\nimport { Router } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { routerMiddleware } from 'react-router-redux'\n\nimport rootReducer from './reducers'\n\nconst history = process.env.PUBLIC_URL.search(/agiled/) === -1 ? createBrowserHistory() : createHashHistory()\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        routerMiddleware(history)\n    )\n)\n\nconst settings = store.getState().settings\nstore.getState().settings = {\n    ...settings,\n    ...JSON.parse(localStorage.settings || \"{}\"),\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n\nwindow.onbeforeunload = () => {\n    localStorage.settings = JSON.stringify(store.getState().settings)\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n","module.exports = __webpack_public_path__ + \"static/media/alarm.c97ce8b0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tick.9c808491.mp3\";"],"sourceRoot":""}