{"version":3,"sources":["actions/settings.js","actions/vote.js","components/VoteCards.js","components/Menu.js","components/CountDown.js","components/Settings.js","components/VoteResults.js","App.js","serviceWorker.js","reducers/settings.js","reducers/vote.js","reducers/index.js","index.js","sounds/alarm.mp3","sounds/tick.mp3"],"names":["SET_COUNTDOWN","setCountdown","seconds","type","payload","SET_COUNTDOWN_WARNING","setCountdownWarning","SET_SCALE","SCALE_ITEMS","setScale","scale","TOGGLE_SETTINGS","toggleSettings","open","TOGGLE_SOUND","toggleSound","sound","TOGGLE_THEME","toggleTheme","theme","TOGGLE_ONLINE","toggleOnline","online","SET_ONLINE_URL","TOGGLE_CLOSE_ON_VOTE","toggleCloseOnVote","closeOnVote","SET_VOTE","setVote","vote","useStyles","makeStyles","createStyles","root","display","flexWrap","padding","voteCard","content","paddingTop","flex","margin","fontSize","height","width","selected","borderColor","palette","warning","main","color","VoteCards","props","classes","dispatch","useDispatch","history","useHistory","useSelector","state","settings","handleDrawerToggle","className","map","text","idx","Button","key","variant","onClick","location","pathname","handleToggleVote","clsx","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","maxWidth","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","drawerHeaderActions","flexGrow","contentShift","PersistentDrawerLeft","togglePalleteMode","children","useTheme","React","useState","setOpen","onTouchStart","e","nativeEvent","startX","touches","clientX","target","addEventListener","handleSwipe","evt","swipeLength","changedTouches","removeEventListener","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","direction","Divider","List","icon","path","title","item","ListItem","button","push","ListItemIcon","ListItemText","primary","alarm","Audio","alarmSound","tick","tickSound","load","flexDirection","userSelect","complex","backgroundColor","left","transform","top","background","default","error","textTransform","minWidth","secondary","contrastText","backgroundImage","action","hover","CountDown","initialCounter","countdown","countdownWarning","counterInterval","useRef","counter","setCounter","warningMode","useMemo","errorMode","counterFormat","minutes","Math","abs","substr","useEffect","clearInterval","current","light","setInterval","cnt","play","number","marginTop","marginBottom","Settings","Dialog","onClose","fullWidth","DialogTitle","DialogContent","dividers","FormControl","component","RadioGroup","name","value","onChange","FormControlLabel","control","Radio","label","FormGroup","row","Switch","checked","TextField","required","inputProps","min","onInput","val","disabled","perspective","card","breakpoints","up","VoteResults","visible","setVisible","App","themeType","responsiveFontSizes","createMuiTheme","ThemeProvider","exact","Boolean","window","hostname","match","initialState","onlineURL","settingsReducer","combineReducers","process","search","createBrowserHistory","createHashHistory","store","createStore","rootReducer","applyMiddleware","routerMiddleware","getState","JSON","parse","localStorage","ReactDOM","render","document","getElementById","onbeforeunload","stringify","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.602948ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport BreakIcon from '@material-ui/icons/LocalBarRounded'\r\n\r\nexport const SET_COUNTDOWN = 'SET_COUNTDOWN'\r\nexport const setCountdown = (seconds = 7) => ({ type: SET_COUNTDOWN, payload: seconds })\r\n\r\nexport const SET_COUNTDOWN_WARNING = 'SET_COUNTDOWN_WARNING'\r\nexport const setCountdownWarning = (seconds = 4) => ({ type: SET_COUNTDOWN_WARNING, payload: seconds })\r\n\r\nexport const SET_SCALE = 'SET_SCALE'\r\nexport const SCALES = ['Standard', 'Fibonacci', 'T-shirts']\r\nexport const SCALE_ITEMS = [\r\n    [0, 1, 2, 3, 5, 8, 13, 20, 40, 100, '?', <BreakIcon />],\r\n    [0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, '?', <BreakIcon />],\r\n    ['XS', 'S', 'M', 'L', 'XL', 'XXL', '?', <BreakIcon />],\r\n]\r\nexport const setScale = (scale = 0) => ({ type: SET_SCALE, payload: scale })\r\n\r\nexport const TOGGLE_SETTINGS = 'TOGGLE_SETTINGS'\r\nexport const toggleSettings = (open) => ({ type: TOGGLE_SETTINGS, payload: open })\r\n\r\nexport const TOGGLE_SOUND = 'TOGGLE_SOUND'\r\nexport const toggleSound = (sound) => ({ type: TOGGLE_SOUND, payload: sound })\r\n\r\nexport const TOGGLE_THEME = 'TOGGLE_THEME'\r\nexport const toggleTheme = (theme) => ({ type: TOGGLE_THEME, payload: theme })\r\n\r\nexport const TOGGLE_ONLINE = 'TOGGLE_ONLINE'\r\nexport const toggleOnline = (online) => ({ type: TOGGLE_ONLINE, payload: online })\r\n\r\nexport const SET_ONLINE_URL = 'SET_ONLINE_URL'\r\nexport const setOnlineURL = (onlineURL) => ({ type: SET_ONLINE_URL, payload: onlineURL })\r\n\r\nexport const TOGGLE_CLOSE_ON_VOTE = 'TOGGLE_CLOSE_ON_VOTE'\r\nexport const toggleCloseOnVote = (closeOnVote) => ({ type: TOGGLE_CLOSE_ON_VOTE, payload: closeOnVote })\r\n","export const SET_VOTE = 'SET_VOTE'\r\nexport const setVote = (vote) => ({ type: SET_VOTE, payload: vote })\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport { createStyles, makeStyles } from '@material-ui/core'\r\nimport { Button } from '@material-ui/core'\r\nimport { SCALE_ITEMS, setVote } from '../actions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            padding: '10px 5px',\r\n        },\r\n        voteCard: {\r\n            '&::before': {\r\n                display: 'block',\r\n                content: '\"\"',\r\n                paddingTop: '115%',\r\n            },\r\n            flex: 1,\r\n            margin: 5,\r\n            padding: 0,\r\n            fontSize: 24,\r\n            '& svg': {\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n        },\r\n        selected: {\r\n            borderColor: theme.palette.warning.main,\r\n            color: theme.palette.warning.main,\r\n        },\r\n    })\r\n)\r\n\r\nfunction VoteCards(props) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const scale = useSelector((state) => state.settings.scale)\r\n    const closeOnVote = useSelector((state) => state.settings.closeOnVote)\r\n    const vote = useSelector((state) => state.vote.selected)\r\n\r\n    const { handleDrawerToggle = () => { } } = props\r\n\r\n    const handleToggleVote = (idx) => {\r\n        if (closeOnVote && history.location.pathname === '/results') {\r\n            handleDrawerToggle()\r\n        }\r\n        dispatch(setVote(idx === vote ? null : idx))\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        {SCALE_ITEMS[scale].map((text, idx) => (\r\n            <Button key={text} variant=\"outlined\" onClick={() => handleToggleVote(idx)}\r\n                className={clsx(classes.voteCard, {\r\n                    [classes.selected]: vote === idx,\r\n                })}\r\n            >\r\n                {text}\r\n            </Button>\r\n        ))}\r\n    </div>\r\n}\r\n\r\nexport default VoteCards\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles, useTheme, createStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport PlayArrow from '@material-ui/icons/PlayArrowRounded'\r\nimport Pause from '@material-ui/icons/PauseRounded'\r\nimport DarkThemeIcon from '@material-ui/icons/Brightness4'\r\nimport LightThemeIcon from '@material-ui/icons/Brightness7'\r\nimport SettingsIcon from '@material-ui/icons/TuneRounded'\r\nimport VoteCards from './VoteCards'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleSettings } from '../actions'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst drawerWidth = 320\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flex: 1,\r\n        },\r\n        appBar: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: '100%',\r\n            maxWidth: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: '100%',\r\n            maxWidth: drawerWidth,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        drawerHeaderActions: {\r\n            flex: 1,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            display: 'flex',\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: -drawerWidth,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        },\r\n    }),\r\n)\r\n\r\nexport default function PersistentDrawerLeft({ togglePalleteMode, children }) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const theme = useTheme()\r\n    const [open, setOpen] = React.useState(true)\r\n\r\n    const handleDrawerToggle = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    const handleSettingsToggle = (e) => {\r\n        dispatch(toggleSettings(true))\r\n    }\r\n\r\n    const handleTouchStart = ({ nativeEvent: e }) => {\r\n        const startX = e.touches[0].clientX\r\n\r\n        const handleSwipe = (evt) => {\r\n            const swipeLength = evt.changedTouches[0].clientX - startX\r\n            if (!open && swipeLength > 150) {\r\n                setOpen(true)\r\n            } else if (open && swipeLength < -150) {\r\n                setOpen(false)\r\n            }\r\n            e.target.removeEventListener('touchend', handleSwipe)\r\n        }\r\n        if ((!open && startX < 50) || (open && startX < 300)) {\r\n            e.target.addEventListener('touchend', handleSwipe)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onTouchStart={handleTouchStart}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerToggle}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Agiled\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <div className={classes.drawerHeaderActions}>\r\n                        <IconButton onClick={togglePalleteMode}>\r\n                            {theme.palette.type === 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\r\n                        </IconButton>\r\n                        <IconButton onClick={handleSettingsToggle}>\r\n                            <SettingsIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <IconButton onClick={handleDrawerToggle}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {[{\r\n                        icon: <PlayArrow />,\r\n                        path: '/results',\r\n                        title: 'Start vote',\r\n                    }].map((item) => (\r\n                        history.location.pathname) !== '/results' ?\r\n                        <ListItem button key={item.title} onClick={() => history.push(item.path)}>\r\n                            <ListItemIcon><PlayArrow /></ListItemIcon>\r\n                            <ListItemText primary={'Start vote'} />\r\n                        </ListItem>\r\n                        :\r\n                        <ListItem button key=\"Stop vote\" onClick={() => history.push('/')}>\r\n                            <ListItemIcon><Pause /></ListItemIcon>\r\n                            <ListItemText primary={'Stop vote'} />\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n                <Divider />\r\n                <VoteCards handleDrawerToggle={handleDrawerToggle} />\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                {children}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\r\nimport { Typography, Button, createStyles, makeStyles, useTheme } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport alarmSound from '../sounds/alarm.mp3'\r\nimport tickSound from '../sounds/tick.mp3'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst alarm = new Audio(alarmSound)\r\nconst tick = new Audio(tickSound)\r\nalarm.load()\r\ntick.load()\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        'countdown': {\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            userSelect: 'none',\r\n            transition: theme.transitions.create(['background-color'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.complex,\r\n            }),\r\n        },\r\n        'counter': {\r\n            fontSize: '20vw',\r\n            position: 'relative',\r\n            '&:after': {\r\n                backgroundColor: 'transparent',\r\n                content: '\"\"',\r\n                display: 'block',\r\n                width: '104%',\r\n                left: '-2%',\r\n                height: '2vw',\r\n                transform: 'rotate(-10deg)',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                '.error&': {\r\n                    backgroundColor: theme.palette.background.default,\r\n                    '$light &': {\r\n                        backgroundColor: theme.palette.error.main,\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        'button': {\r\n            fontSize: 30,\r\n            textTransform: 'none',\r\n            padding: '7px 25px',\r\n            minWidth: 150,\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.contrastText,\r\n            transition: theme.transitions.create(['background'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.complex,\r\n            }),\r\n            '&:hover': {\r\n                backgroundImage: `linear-gradient(to right, ${theme.palette.action.hover}, ${theme.palette.action.hover})`,\r\n                backgroundColor: theme.palette.secondary.main,\r\n                '$warning&': {\r\n                    backgroundColor: theme.palette.warning.main,\r\n                },\r\n                '$error&': {\r\n                    backgroundColor: theme.palette.error.main,\r\n                },\r\n            },\r\n        },\r\n        'light': {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.contrastText,\r\n        },\r\n        'warning': {\r\n            backgroundColor: theme.palette.warning.main,\r\n            color: theme.palette.error.contrastText,\r\n        },\r\n        'error': {\r\n            backgroundColor: theme.palette.error.main,\r\n            color: theme.palette.error.contrastText,\r\n        },\r\n    })\r\n)\r\n\r\nfunction CountDown() {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const initialCounter = useSelector(({ settings }) => settings.countdown)\r\n    const countdownWarning = useSelector(({ settings }) => settings.countdownWarning)\r\n    const sound = useSelector(({ settings }) => settings.sound)\r\n\r\n    const counterInterval = useRef(0)\r\n    const [counter, setCounter] = useState(initialCounter)\r\n\r\n    const warningMode = useMemo(() => counter <= countdownWarning && counter > 0, [counter, countdownWarning])\r\n    const errorMode = useMemo(() => counter < 1, [counter])\r\n    const counterFormat = useMemo(() => {\r\n        const minutes = (Math.abs(counter) < 600 ? '0' : '') + Math.abs(counter / 60 | 0)\r\n        const seconds = ('0' + Math.abs(counter % 60)).substr(-2)\r\n\r\n        return `${minutes}:${seconds}`\r\n    }, [counter])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearInterval(counterInterval.current)\r\n            counterInterval.current = 0\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (counterInterval.current === 0) setCounter(initialCounter)\r\n    }, [initialCounter])\r\n\r\n    const handleCountDown = () => {\r\n        if (initialCounter > counter) {\r\n            clearInterval(counterInterval.current)\r\n            counterInterval.current = 0\r\n            setCounter(initialCounter)\r\n        } else {\r\n            setCounter(counter - 1)\r\n            counterInterval.current = setInterval(() =>\r\n                setCounter(cnt => {\r\n                    if (sound) {\r\n                        if (cnt <= countdownWarning + 1 && cnt > 1) tick.play()\r\n                        else if (cnt === 1) alarm.play()\r\n                    }\r\n                    return cnt - 1\r\n                }),\r\n                1000\r\n            )\r\n        }\r\n    }\r\n\r\n    return <div className={clsx(classes.countdown, {\r\n        [classes.light]: theme.palette.type === 'light',\r\n        [classes.warning]: theme.palette.type === 'light' && warningMode,\r\n        [classes.error]: theme.palette.type === 'light' && errorMode,\r\n    })}>\r\n        <Typography className={clsx(classes.counter, {\r\n            error: errorMode,\r\n        })}>\r\n            <span>{counterFormat}</span>\r\n        </Typography>\r\n        <Button\r\n            onClick={handleCountDown}\r\n            variant=\"contained\"\r\n            className={clsx(classes.button, {\r\n                [classes.warning]: warningMode,\r\n                [classes.error]: errorMode,\r\n            })}\r\n        >\r\n            {counterInterval.current === 0 ? 'Start' : 'Reset'}\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default CountDown\r\n","import React from 'react'\r\nimport { Dialog, DialogContent, DialogTitle, FormControl, RadioGroup, FormControlLabel, Radio, Switch, FormGroup, TextField, makeStyles, createStyles } from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setScale, toggleSettings, toggleSound, setCountdown, setCountdownWarning, toggleOnline, toggleCloseOnVote } from '../actions/settings'\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        number: {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            display: 'block',\r\n        }\r\n    })\r\n)\r\n\r\nfunction Settings() {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const scale = useSelector((state) => state.settings.scale)\r\n    const sound = useSelector((state) => state.settings.sound)\r\n    const open = useSelector((state) => state.settings.open)\r\n    const countdown = useSelector((state) => state.settings.countdown)\r\n    const countdownWarning = useSelector((state) => state.settings.countdownWarning)\r\n    const online = useSelector((state) => state.settings.online)\r\n    const closeOnVote = useSelector((state) => state.settings.closeOnVote)\r\n\r\n    const handleClose = () => {\r\n        dispatch(toggleSettings(false))\r\n    }\r\n\r\n    const handleChangeScale = (e) => {\r\n        dispatch(setScale(e.target.value | 0))\r\n    }\r\n\r\n    const handleToggleSound = () => {\r\n        dispatch(toggleSound(!sound))\r\n    }\r\n\r\n    const handleChangeCountdown = (e) => {\r\n        dispatch(setCountdown(e.target.value | 0))\r\n    }\r\n\r\n    const handleChangeCountdownWarning = (e) => {\r\n        const val = countdown < e.target.value | 0 ? countdown : e.target.value | 0\r\n        dispatch(setCountdownWarning(val))\r\n    }\r\n\r\n    const handleToggleOnline = () => {\r\n        dispatch(toggleOnline(!online))\r\n    }\r\n\r\n    const handleToggleCloseOnVote = () => {\r\n        dispatch(toggleCloseOnVote(!closeOnVote))\r\n    }\r\n\r\n    return <Dialog onClose={handleClose} open={open} fullWidth>\r\n        <DialogTitle>\r\n            Settings\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup name=\"scale\" value={scale} onChange={handleChangeScale}>\r\n                    {['Standard', 'Fibonacci', 'T-shirts'].map((item, idx) => {\r\n                        return <FormControlLabel\r\n                            control={<Radio />}\r\n                            key={item}\r\n                            label={item}\r\n                            value={idx}\r\n                        />\r\n                    })}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={<Switch checked={closeOnVote} onChange={handleToggleCloseOnVote} />}\r\n                    label=\"Close menu after vote\"\r\n                />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={<Switch checked={sound} onChange={handleToggleSound} />}\r\n                    label=\"Sound\"\r\n                />\r\n            </FormGroup>\r\n            <TextField\r\n                className={classes.number}\r\n                required\r\n                label=\"Countdown limit (s)\"\r\n                type=\"number\"\r\n                inputProps={{\r\n                    min: 0,\r\n                }}\r\n                value={countdown}\r\n                onInput={handleChangeCountdown}\r\n            />\r\n            <TextField\r\n                className={classes.number}\r\n                required\r\n                label=\"Countdown warning limit (s)\"\r\n                type=\"number\"\r\n                inputProps={{\r\n                    min: 0,\r\n                }}\r\n                error={countdown < countdownWarning}\r\n                value={countdownWarning}\r\n                onInput={handleChangeCountdownWarning}\r\n            />\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={<Switch checked={online} onChange={handleToggleOnline} />}\r\n                    label=\"Offline (Singleplayer)\"\r\n                    disabled\r\n                />\r\n            </FormGroup>\r\n        </DialogContent>\r\n    </Dialog>\r\n}\r\n\r\nexport default Settings\r\n","import React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles, createStyles, Button } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { SCALE_ITEMS } from '../actions/settings'\r\n\r\nconst useStyles = makeStyles((theme) => createStyles({\r\n        root: {\r\n            flex: 1,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            perspective: '100vw',\r\n        },\r\n        card: {\r\n            minWidth: '3.6ex',\r\n            backgroundColor: theme.palette.background.default,\r\n            fontSize: '45vw',\r\n            [theme.breakpoints.up('sm')]: {\r\n                fontSize: '30vw',\r\n            },\r\n            [theme.breakpoints.up('md')]: {\r\n                fontSize: '20vw',\r\n            },\r\n            [theme.breakpoints.up('lg')]: {\r\n                fontSize: '15vw',\r\n            },\r\n            padding: 0,\r\n            transformStyle: 'preserve-3d',\r\n            transform: 'rotateY(.5turn)',\r\n            transition: 'transform 1s',\r\n            '& span.MuiButton-label svg': {\r\n                width: '80%',\r\n                height: '80%',\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: theme.palette.background.default,\r\n            },\r\n            '&:before': {\r\n                content: '\"\"',\r\n                display: 'table',\r\n                paddingTop: '120%',\r\n            },\r\n            '&:after': {\r\n                content: '\"\"',\r\n                display: 'block',\r\n                position: 'absolute',\r\n                width: '99%',\r\n                height: '99%',\r\n                transform: 'rotateY(.5turn)',\r\n                backgroundColor: theme.palette.background.default,\r\n                backgroundImage: `\r\n                    repeating-linear-gradient(-45deg, transparent, transparent 5px, ${theme.palette.action.selected} 6px, transparent 7px),\r\n                    repeating-linear-gradient(45deg, transparent, transparent 5px,  ${theme.palette.action.selected} 6px, transparent 7px)\r\n                `,\r\n            }\r\n        },\r\n        'visible': {\r\n            transform: 'rotateY(0turn)',\r\n        }\r\n    })\r\n)\r\n\r\nfunction VoteResults() {\r\n    const classes = useStyles()\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const scale = useSelector(({settings}) => settings.scale)\r\n    const vote = useSelector(({ vote }) => vote.selected)\r\n\r\n    const handleToggleVisible = () => setVisible(!visible)\r\n\r\n    useEffect(() => {\r\n        setVisible(false)\r\n    }, [vote])\r\n\r\n    return <div className={classes.root}>\r\n        { vote !== null ? <Button\r\n        onClick={handleToggleVisible}\r\n        className={clsx(classes.card, {\r\n            [classes.visible]: visible,\r\n        })} variant=\"outlined\">{SCALE_ITEMS[scale][vote]}</Button> : null}\r\n    </div>\r\n}\r\n\r\nexport default VoteResults\r\n","import React from 'react'\nimport Menu from './components/Menu'\nimport { responsiveFontSizes, createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport CountDown from './components/CountDown'\nimport Settings from './components/Settings'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toggleTheme } from './actions'\nimport { Route } from 'react-router-dom'\nimport VoteResults from './components/VoteResults'\n\nfunction App() {\n    const dispatch = useDispatch()\n    const themeType = useSelector(({settings}) => settings.theme)\n    const theme = responsiveFontSizes(\n        createMuiTheme({\n            palette: {\n                type: ['dark', 'light'][themeType],\n                primary: {\n                    main: '#448aff',\n                },\n                secondary: {\n                    main: '#00897b',\n                },\n            },\n        })\n    )\n\n    const togglePalleteMode = () => {\n        dispatch(toggleTheme((themeType + 1) % 2))\n    }\n\n    return <ThemeProvider theme={theme}>\n        <Menu togglePalleteMode={togglePalleteMode}>\n            <Settings />\n            <Route path=\"/\" exact component={CountDown} />\n            <Route path=\"/results\" component={VoteResults} />\n        </Menu>\n    </ThemeProvider>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    SET_COUNTDOWN, SET_SCALE,\r\n    TOGGLE_SETTINGS, TOGGLE_SOUND, TOGGLE_THEME, SET_COUNTDOWN_WARNING, TOGGLE_ONLINE, SET_ONLINE_URL, TOGGLE_CLOSE_ON_VOTE\r\n} from '../actions/settings.js'\r\n\r\nconst initialState = {\r\n    scale: 0,\r\n    open: false,\r\n    sound: true,\r\n    theme: 0,\r\n    countdown: 7,\r\n    countdownWarning: 3,\r\n    online: false,\r\n    onlineURL: false,\r\n    closeOnVote: false,\r\n}\r\n\r\nfunction settingsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_COUNTDOWN:\r\n            return {\r\n                ...state,\r\n                countdown: action.payload,\r\n            }\r\n        case SET_COUNTDOWN_WARNING:\r\n            return {\r\n                ...state,\r\n                countdownWarning: action.payload,\r\n            }\r\n        case SET_SCALE:\r\n            return {\r\n                ...state,\r\n                scale: action.payload,\r\n            }\r\n        case TOGGLE_SETTINGS:\r\n            return {\r\n                ...state,\r\n                open: action.payload,\r\n            }\r\n        case TOGGLE_SOUND:\r\n            return {\r\n                ...state,\r\n                sound: action.payload,\r\n            }\r\n        case TOGGLE_THEME:\r\n            return {\r\n                ...state,\r\n                theme: action.payload,\r\n            }\r\n        case TOGGLE_ONLINE:\r\n            return {\r\n                ...state,\r\n                online: action.payload,\r\n            }\r\n        case SET_ONLINE_URL:\r\n            return {\r\n                ...state,\r\n                onlineURL: action.payload,\r\n            }\r\n        case TOGGLE_CLOSE_ON_VOTE:\r\n            return {\r\n                ...state,\r\n                closeOnVote: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default settingsReducer\r\n","import {\r\n    SET_VOTE\r\n} from '../actions/vote.js'\r\n\r\nconst initialState = {\r\n    selected: null,\r\n}\r\n\r\nfunction settingsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_VOTE:\r\n            return {\r\n                ...state,\r\n                selected: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default settingsReducer\r\n","import { combineReducers } from 'redux'\r\n\r\nimport settings from './settings'\r\nimport vote from './vote'\r\n\r\nexport default combineReducers({\r\n    settings,\r\n    vote,\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nimport { createBrowserHistory, createHashHistory } from 'history'\nimport { Router } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { routerMiddleware } from 'react-router-redux'\n\nimport rootReducer from './reducers'\n\nconst history = process.env.PUBLIC_URL.search(/agiled/) === -1 ? createBrowserHistory() : createHashHistory()\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        routerMiddleware(history)\n    )\n)\n\nconst settings = store.getState().settings\nstore.getState().settings = {\n    ...settings,\n    ...JSON.parse(localStorage.settings || \"{}\"),\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n\nwindow.onbeforeunload = () => {\n    localStorage.settings = JSON.stringify(store.getState().settings)\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/alarm.c97ce8b0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tick.9c808491.mp3\";"],"sourceRoot":""}